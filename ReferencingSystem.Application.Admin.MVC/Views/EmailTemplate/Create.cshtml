@model ReferencingSystem.Model.EmailTemplate

@{
    ViewBag.Title = "Create email template";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="//cdn.ckeditor.com/4.4.4/standard/ckeditor.js"></script>
    <script type="text/javascript">
        $(function () {
            // Replace the <textarea id="editor1"> with a CKEditor
            // instance, using default configuration.
            CKEDITOR.replace('EmailBody', {
                htmlEncodeOutput: true
            });
        });
    </script>

}

<section class="content">
    <div class="col-md-10">
        <div class="box box-primary">
            <div class="box-header">
                <h3 class="box-title">Create a new template</h3>
            </div><!-- /.box-header -->
            <!-- form start -->
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="box-body">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label for="exampleInputEmail1">Email Name</label>
                        @Html.EditorFor(model => model.EmailName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Subject</label>
                        @Html.EditorFor(model => model.EmailSubject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailSubject, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputFile">CC's address</label>
                        @Html.EditorFor(model => model.Emailcc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Emailcc, "", new { @class = "text-danger" })
                    </div>
                    @Html.HiddenFor(model => model.EmailIsHTML)
                    <div class="form-group">
                        <label for="exampleInputPassword1">Email body</label>
                        @Html.TextAreaFor(model => model.EmailBody, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailBody, "", new { @class = "text-danger" })
                    </div>

                </div><!-- /.box-body -->
                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            }
        </div>
        <div>
            @Html.ActionLink("Back to List", null, "Email", null, null)
        </div>
    </div>


    <!-- /.row -->
</section>